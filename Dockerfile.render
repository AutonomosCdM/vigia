# Vigia Render Deployment Dockerfile
# Optimized single-service deployment for Render platform

FROM python:3.11-slim AS base

# Medical compliance metadata
LABEL maintainer="Vigia Medical Team"
LABEL version="1.3.1"
LABEL description="Vigia medical LPP detection system for Render deployment"
LABEL compliance="HIPAA,ISO13485,SOC2"

# Install system dependencies (minimal for faster builds)
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libgl1-mesa-glx \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user
RUN useradd -m -u 1000 -s /bin/bash vigia && \
    mkdir -p /app /app/logs /app/data /app/tmp && \
    chown -R vigia:vigia /app

# Set working directory
WORKDIR /app

# Copy requirements first for better layer caching
COPY requirements.txt .
COPY requirements-medical.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir -r requirements-medical.txt

# Copy application code
COPY --chown=vigia:vigia vigia_detect/ ./vigia_detect/
COPY --chown=vigia:vigia config/ ./config/
COPY --chown=vigia:vigia models/ ./models/
COPY --chown=vigia:vigia scripts/render_entrypoint.sh ./render_entrypoint.sh

# Make entrypoint executable
RUN chmod +x ./render_entrypoint.sh

# Create necessary directories and set permissions
RUN mkdir -p /app/data/input /app/data/output /app/logs /app/tmp && \
    chown -R vigia:vigia /app

# Switch to non-root user
USER vigia

# Environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONPATH=/app
ENV ENVIRONMENT=production
ENV MEDICAL_COMPLIANCE_LEVEL=basic
ENV PHI_PROTECTION_ENABLED=true

# Health check for Render platform
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:${PORT:-8000}/health || exit 1

# Expose port (Render will set PORT environment variable)
EXPOSE ${PORT:-8000}

# Entry point that handles multiple service types
ENTRYPOINT ["./render_entrypoint.sh"]

# Default to unified web server
CMD ["web"]