[pytest]
# Pytest configuration for Vigia Medical System

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 6.0

# Add project root to Python path
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings

# Test markers
markers =
    critical: marks tests as critical for deployment (must pass)
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    e2e: marks tests as end-to-end tests
    unit: marks tests as unit tests
    medical: marks tests as medical/clinical validation tests
    security: marks tests as security-related tests
    smoke: marks tests as smoke tests (quick validation)
    regression: marks tests as regression tests
    cleanup: marks tests that perform cleanup operations
    infrastructure: marks tests for infrastructure validation
    mcp: marks tests for MCP integration
    hipaa_compliance: marks tests for HIPAA compliance validation
    emergency_escalation: marks tests for emergency escalation protocols
    phi_tokenization: marks tests for PHI tokenization validation
    medical_safety: marks tests for medical safety protocols
    scalability: marks tests for system scalability
    performance: marks tests for performance validation
    database: marks tests for database operations
    encryption: marks tests for encryption validation
    regulatory: marks tests for regulatory compliance validation
    agent_coordination: marks tests for multi-agent coordination

# Logging configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage settings (if pytest-cov is installed)
# addopts = --cov=vigia_detect --cov-report=term-missing --cov-report=html

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning:pydantic.*
    ignore::DeprecationWarning:pydantic_settings.*
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Environment variables should be loaded from .env.testing
# Use: export $(grep -v '^#' .env.testing | xargs) before running tests