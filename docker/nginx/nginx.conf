# Vigia Hospital-Grade NGINX Configuration
# Medical-grade reverse proxy with security hardening

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Security and performance tuning
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self'; media-src 'self'; object-src 'none'; child-src 'none'; frame-src 'none'; worker-src 'none'; frame-ancestors 'self'; form-action 'self'; base-uri 'self';" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Remove server tokens (security)
    server_tokens off;
    
    # Logging format for medical audit
    log_format medical_audit '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           '$request_time $upstream_response_time '
                           '$ssl_protocol $ssl_cipher '
                           'session_id="$http_x_session_id" '
                           'patient_code="$http_x_patient_code"';
    
    access_log /var/log/nginx/access.log medical_audit;
    
    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;  # Medical images
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate limiting for medical API
    limit_req_zone $binary_remote_addr zone=medical_api:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=whatsapp_webhook:10m rate=60r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=medical_conn:10m;
    
    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Hide nginx version
    server_tokens off;
    
    # Include ModSecurity (if available)
    # include /etc/nginx/modsecurity/modsecurity.conf;
    # include /etc/nginx/modsecurity/main.conf;
    
    # Upstream definitions
    upstream vigia_detection {
        server vigia-detection:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream vigia_whatsapp {
        server vigia-whatsapp:8001 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    upstream vigia_monitoring {
        server vigia-grafana:3000 max_fails=2 fail_timeout=30s;
        server vigia-prometheus:9090 backup;
    }
    
    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name _;
        
        # Allow health checks on HTTP
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # Main HTTPS server
    server {
        listen 443 ssl http2;
        server_name vigia.hospital.local;
        
        # SSL certificates
        ssl_certificate /etc/nginx/ssl/vigia.crt;
        ssl_certificate_key /etc/nginx/ssl/vigia.key;
        
        # Security settings
        limit_conn medical_conn 50;
        
        # Main Vigia Detection API
        location /api/ {
            # Rate limiting
            limit_req zone=medical_api burst=10 nodelay;
            
            # Security headers for API
            add_header X-API-Version "1.0" always;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            
            # Proxy settings
            proxy_pass http://vigia_detection;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts for medical processing
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Medical compliance headers
            proxy_set_header X-Medical-Context "hospital";
            proxy_set_header X-Compliance-Level "hipaa";
        }
        
        # WhatsApp webhook endpoint
        location /webhook/whatsapp {
            # Higher rate limit for WhatsApp
            limit_req zone=whatsapp_webhook burst=20 nodelay;
            
            proxy_pass http://vigia_whatsapp/webhook;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Quick timeouts for webhooks
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            
            proxy_pass http://vigia_detection/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }
        
        # Monitoring dashboard (restricted access)
        location /monitoring/ {
            # IP restriction for hospital network
            allow 172.20.0.0/16;  # Hospital internal network
            allow 172.21.0.0/16;  # Management network
            deny all;
            
            # Basic auth for additional security
            auth_basic "Vigia Medical Monitoring";
            auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://vigia_monitoring/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Celery Flower monitoring (admin only)
        location /flower/ {
            # Restrict to admin network only
            allow 172.22.0.0/16;  # Management network
            deny all;
            
            proxy_pass http://vigia-flower:5555/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Static files (if any)
        location /static/ {
            alias /var/www/vigia/static/;
            expires 1M;
            add_header Cache-Control "public, immutable";
        }
        
        # Security: Block common attack patterns
        location ~* \.(htaccess|htpasswd|ini|log|sh|sql|tar|gz)$ {
            deny all;
            return 404;
        }
        
        # Security: Block sensitive paths
        location ~ /\. {
            deny all;
            return 404;
        }
        
        # Default fallback
        location / {
            limit_req zone=general burst=20 nodelay;
            
            proxy_pass http://vigia_detection;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Custom error pages
        error_page 403 /error/403.html;
        error_page 404 /error/404.html;
        error_page 500 502 503 504 /error/50x.html;
        
        location ^~ /error/ {
            internal;
            root /var/www/vigia/;
        }
    }
    
    # Management interface (separate server block)
    server {
        listen 8443 ssl http2;
        server_name vigia-admin.hospital.local;
        
        # SSL certificates
        ssl_certificate /etc/nginx/ssl/vigia.crt;
        ssl_certificate_key /etc/nginx/ssl/vigia.key;
        
        # Restrict to management network only
        allow 172.22.0.0/16;
        deny all;
        
        # Prometheus metrics
        location /metrics {
            proxy_pass http://vigia-prometheus:9090;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }
        
        # Grafana dashboards
        location / {
            proxy_pass http://vigia-grafana:3000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}