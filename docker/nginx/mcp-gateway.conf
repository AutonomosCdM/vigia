# Vigia MCP Gateway NGINX Configuration
# Load balancer and router for Docker Hub MCP services

upstream mcp_github {
    server mcp-github:8080;
    keepalive 32;
}

upstream mcp_stripe {
    server mcp-stripe:8080;
    keepalive 32;
}

upstream mcp_redis {
    server mcp-redis:8080;
    keepalive 32;
}

upstream mcp_mongodb {
    server mcp-mongodb:8080;
    keepalive 32;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=mcp_general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=mcp_medical:10m rate=20r/s;
limit_req_zone $binary_remote_addr zone=mcp_billing:10m rate=5r/s;

# Logging format for MCP requests
log_format mcp_access '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" '
                      'service=$upstream_addr '
                      'response_time=$upstream_response_time '
                      'request_time=$request_time '
                      'mcp_service="$mcp_service_header"';

server {
    listen 80;
    listen 443 ssl http2;
    server_name mcp-gateway.vigia.local;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/vigia-mcp.crt;
    ssl_certificate_key /etc/nginx/ssl/vigia-mcp.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';";

    # Medical compliance headers
    add_header X-Medical-Compliance "HIPAA-Compliant";
    add_header X-PHI-Protection "Enabled";
    add_header X-Audit-Required "True";

    # Access logging
    access_log /var/log/nginx/mcp_access.log mcp_access;
    error_log /var/log/nginx/mcp_error.log warn;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "MCP Gateway Healthy\n";
        add_header Content-Type text/plain;
    }

    # Gateway status and metrics
    location /gateway/status {
        access_log off;
        return 200 '{"status":"healthy","services":{"github":"up","stripe":"up","redis":"up","mongodb":"up"},"timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }

    # GitHub MCP Service
    location /mcp/github/ {
        set $mcp_service_header "github";
        
        # Rate limiting
        limit_req zone=mcp_general burst=20 nodelay;
        
        # Medical context headers
        proxy_set_header X-Medical-Context "true";
        proxy_set_header X-Compliance-Level "hipaa";
        proxy_set_header X-Service-Type "integration";
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Proxy configuration
        proxy_pass http://mcp_github/;
        proxy_redirect off;
        proxy_buffering off;
        proxy_request_buffering off;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Error handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        proxy_next_upstream_tries 2;
    }

    # Stripe MCP Service  
    location /mcp/stripe/ {
        set $mcp_service_header "stripe";
        
        # Stricter rate limiting for billing
        limit_req zone=mcp_billing burst=10 nodelay;
        
        # PCI DSS compliance headers
        proxy_set_header X-Medical-Context "true";
        proxy_set_header X-Compliance-Level "pci-dss";
        proxy_set_header X-Service-Type "billing";
        proxy_set_header X-PHI-Billing "protected";
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Proxy configuration
        proxy_pass http://mcp_stripe/;
        proxy_redirect off;
        proxy_buffering off;
        proxy_request_buffering off;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Error handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        proxy_next_upstream_tries 2;
    }

    # Redis MCP Service
    location /mcp/redis/ {
        set $mcp_service_header "redis";
        
        # Higher rate limits for cache operations
        limit_req zone=mcp_medical burst=50 nodelay;
        
        # Medical cache headers
        proxy_set_header X-Medical-Context "true";
        proxy_set_header X-Compliance-Level "hipaa";
        proxy_set_header X-Service-Type "cache";
        proxy_set_header X-Cache-TTL "900"; # 15 minutes for PHI
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Proxy configuration
        proxy_pass http://mcp_redis/;
        proxy_redirect off;
        proxy_buffering off;
        proxy_request_buffering off;
        
        # Timeouts
        proxy_connect_timeout 15s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Error handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        proxy_next_upstream_tries 3;
    }

    # MongoDB MCP Service (Audit Logs)
    location /mcp/mongodb/ {
        set $mcp_service_header "mongodb";
        
        # Rate limiting for audit operations
        limit_req zone=mcp_general burst=30 nodelay;
        
        # Audit compliance headers
        proxy_set_header X-Medical-Context "true";
        proxy_set_header X-Compliance-Level "hipaa";
        proxy_set_header X-Service-Type "audit";
        proxy_set_header X-Audit-Retention "2555"; # 7 years
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Proxy configuration
        proxy_pass http://mcp_mongodb/;
        proxy_redirect off;
        proxy_buffering off;
        proxy_request_buffering off;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 90s;
        proxy_read_timeout 90s;
        
        # Error handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        proxy_next_upstream_tries 2;
    }

    # Block direct access to MCP services
    location ~* ^/(github|stripe|redis|mongodb)/ {
        return 403 "Direct access denied. Use /mcp/ prefix.";
    }

    # Default location - redirect to documentation
    location / {
        return 302 /gateway/status;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        return 404 "MCP Service Not Found";
        add_header Content-Type text/plain;
    }
    
    location = /50x.html {
        return 500 "MCP Gateway Error";
        add_header Content-Type text/plain;
    }
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name mcp-gateway.vigia.local;
    return 301 https://$server_name$request_uri;
}